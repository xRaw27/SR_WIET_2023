//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `smart_home.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SmartHome;

public class BulbStatus extends com.zeroc.Ice.Value
{
    public BulbStatus()
    {
        this.mode = Mode.Auto;
        this.brightness = Brightness.Low;
        this.rgb = new RGB();
    }

    public BulbStatus(boolean isSwitchedOn)
    {
        this.isSwitchedOn = isSwitchedOn;
        this.mode = Mode.Auto;
        this.brightness = Brightness.Low;
        this.rgb = new RGB();
    }

    public BulbStatus(boolean isSwitchedOn, Mode mode, Brightness brightness, RGB rgb)
    {
        this.isSwitchedOn = isSwitchedOn;
        setMode(mode);
        setBrightness(brightness);
        setRgb(rgb);
    }

    public boolean isSwitchedOn;

    private Mode mode;
    private boolean _mode;

    public Mode getMode()
    {
        if(!_mode)
        {
            throw new java.util.NoSuchElementException("mode is not set");
        }
        return mode;
    }

    public void setMode(Mode mode)
    {
        _mode = true;
        this.mode = mode;
    }

    public boolean hasMode()
    {
        return _mode;
    }

    public void clearMode()
    {
        _mode = false;
    }

    public void optionalMode(java.util.Optional<Mode> v)
    {
        if(v == null || !v.isPresent())
        {
            _mode = false;
        }
        else
        {
            _mode = true;
            mode = v.get();
        }
    }

    public java.util.Optional<Mode> optionalMode()
    {
        if(_mode)
        {
            return java.util.Optional.of(mode);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private Brightness brightness;
    private boolean _brightness;

    public Brightness getBrightness()
    {
        if(!_brightness)
        {
            throw new java.util.NoSuchElementException("brightness is not set");
        }
        return brightness;
    }

    public void setBrightness(Brightness brightness)
    {
        _brightness = true;
        this.brightness = brightness;
    }

    public boolean hasBrightness()
    {
        return _brightness;
    }

    public void clearBrightness()
    {
        _brightness = false;
    }

    public void optionalBrightness(java.util.Optional<Brightness> v)
    {
        if(v == null || !v.isPresent())
        {
            _brightness = false;
        }
        else
        {
            _brightness = true;
            brightness = v.get();
        }
    }

    public java.util.Optional<Brightness> optionalBrightness()
    {
        if(_brightness)
        {
            return java.util.Optional.of(brightness);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private RGB rgb;
    private boolean _rgb;

    public RGB getRgb()
    {
        if(!_rgb)
        {
            throw new java.util.NoSuchElementException("rgb is not set");
        }
        return rgb;
    }

    public void setRgb(RGB rgb)
    {
        _rgb = true;
        this.rgb = rgb;
    }

    public boolean hasRgb()
    {
        return _rgb;
    }

    public void clearRgb()
    {
        _rgb = false;
    }

    public void optionalRgb(java.util.Optional<RGB> v)
    {
        if(v == null || !v.isPresent())
        {
            _rgb = false;
        }
        else
        {
            _rgb = true;
            rgb = v.get();
        }
    }

    public java.util.Optional<RGB> optionalRgb()
    {
        if(_rgb)
        {
            return java.util.Optional.of(rgb);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    public BulbStatus clone()
    {
        return (BulbStatus)super.clone();
    }

    public static String ice_staticId()
    {
        return "::SmartHome::BulbStatus";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 6266223424087389631L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeBool(isSwitchedOn);
        if(_mode)
        {
            Mode.ice_write(ostr_, 1, mode);
        }
        if(_brightness)
        {
            Brightness.ice_write(ostr_, 2, brightness);
        }
        if(_rgb)
        {
            RGB.ice_write(ostr_, 3, rgb);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        isSwitchedOn = istr_.readBool();
        if(_mode = istr_.readOptional(1, com.zeroc.Ice.OptionalFormat.Size))
        {
            mode = Mode.ice_read(istr_);
        }
        if(_brightness = istr_.readOptional(2, com.zeroc.Ice.OptionalFormat.Size))
        {
            brightness = Brightness.ice_read(istr_);
        }
        if(_rgb = istr_.readOptional(3, com.zeroc.Ice.OptionalFormat.VSize))
        {
            istr_.skipSize();
            rgb = RGB.ice_read(istr_);
        }
        istr_.endSlice();
    }
}
