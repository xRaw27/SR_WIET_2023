//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `smart_home.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SmartHome;

public class RefrigeratorSettings extends com.zeroc.Ice.Value
{
    public RefrigeratorSettings()
    {
    }

    public RefrigeratorSettings(float refrigeratorTargetTemperature)
    {
        this.refrigeratorTargetTemperature = refrigeratorTargetTemperature;
    }

    public RefrigeratorSettings(float refrigeratorTargetTemperature, float freezerTargetTemperature)
    {
        this.refrigeratorTargetTemperature = refrigeratorTargetTemperature;
        setFreezerTargetTemperature(freezerTargetTemperature);
    }

    public float refrigeratorTargetTemperature;

    private float freezerTargetTemperature;
    private boolean _freezerTargetTemperature;

    public float getFreezerTargetTemperature()
    {
        if(!_freezerTargetTemperature)
        {
            throw new java.util.NoSuchElementException("freezerTargetTemperature is not set");
        }
        return freezerTargetTemperature;
    }

    public void setFreezerTargetTemperature(float freezerTargetTemperature)
    {
        _freezerTargetTemperature = true;
        this.freezerTargetTemperature = freezerTargetTemperature;
    }

    public boolean hasFreezerTargetTemperature()
    {
        return _freezerTargetTemperature;
    }

    public void clearFreezerTargetTemperature()
    {
        _freezerTargetTemperature = false;
    }

    public void optionalFreezerTargetTemperature(java.util.Optional<java.lang.Float> v)
    {
        if(v == null || !v.isPresent())
        {
            _freezerTargetTemperature = false;
        }
        else
        {
            _freezerTargetTemperature = true;
            freezerTargetTemperature = v.get();
        }
    }

    public java.util.Optional<java.lang.Float> optionalFreezerTargetTemperature()
    {
        if(_freezerTargetTemperature)
        {
            return java.util.Optional.of(freezerTargetTemperature);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    public RefrigeratorSettings clone()
    {
        return (RefrigeratorSettings)super.clone();
    }

    public static String ice_staticId()
    {
        return "::SmartHome::RefrigeratorSettings";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = -3139292161647460613L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeFloat(refrigeratorTargetTemperature);
        if(_freezerTargetTemperature)
        {
            ostr_.writeFloat(1, freezerTargetTemperature);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        refrigeratorTargetTemperature = istr_.readFloat();
        if(_freezerTargetTemperature = istr_.readOptional(1, com.zeroc.Ice.OptionalFormat.F4))
        {
            freezerTargetTemperature = istr_.readFloat();
        }
        istr_.endSlice();
    }
}
