//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `smart_home.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SmartHome;

public class RefrigeratorSensors extends com.zeroc.Ice.Value
{
    public RefrigeratorSensors()
    {
    }

    public RefrigeratorSensors(long timestamp, float refrigeratorTemperature)
    {
        this.timestamp = timestamp;
        this.refrigeratorTemperature = refrigeratorTemperature;
    }

    public RefrigeratorSensors(long timestamp, float refrigeratorTemperature, float freezerTemperature)
    {
        this.timestamp = timestamp;
        this.refrigeratorTemperature = refrigeratorTemperature;
        setFreezerTemperature(freezerTemperature);
    }

    public long timestamp;

    public float refrigeratorTemperature;

    private float freezerTemperature;
    private boolean _freezerTemperature;

    public float getFreezerTemperature()
    {
        if(!_freezerTemperature)
        {
            throw new java.util.NoSuchElementException("freezerTemperature is not set");
        }
        return freezerTemperature;
    }

    public void setFreezerTemperature(float freezerTemperature)
    {
        _freezerTemperature = true;
        this.freezerTemperature = freezerTemperature;
    }

    public boolean hasFreezerTemperature()
    {
        return _freezerTemperature;
    }

    public void clearFreezerTemperature()
    {
        _freezerTemperature = false;
    }

    public void optionalFreezerTemperature(java.util.Optional<java.lang.Float> v)
    {
        if(v == null || !v.isPresent())
        {
            _freezerTemperature = false;
        }
        else
        {
            _freezerTemperature = true;
            freezerTemperature = v.get();
        }
    }

    public java.util.Optional<java.lang.Float> optionalFreezerTemperature()
    {
        if(_freezerTemperature)
        {
            return java.util.Optional.of(freezerTemperature);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    public RefrigeratorSensors clone()
    {
        return (RefrigeratorSensors)super.clone();
    }

    public static String ice_staticId()
    {
        return "::SmartHome::RefrigeratorSensors";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 7390319061110244882L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeLong(timestamp);
        ostr_.writeFloat(refrigeratorTemperature);
        if(_freezerTemperature)
        {
            ostr_.writeFloat(1, freezerTemperature);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        timestamp = istr_.readLong();
        refrigeratorTemperature = istr_.readFloat();
        if(_freezerTemperature = istr_.readOptional(1, com.zeroc.Ice.OptionalFormat.F4))
        {
            freezerTemperature = istr_.readFloat();
        }
        istr_.endSlice();
    }
}
